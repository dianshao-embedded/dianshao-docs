[{"id":0,"href":"/dianshao-docs/usermanual/overview/","title":"1. 概述","parent":"用户手册","content":""},{"id":1,"href":"/dianshao-docs/tutorial/yocto/","title":"Yocto 介绍","parent":"教程","content":""},{"id":2,"href":"/dianshao-docs/quickstart/introduction/","title":"简介","parent":"入门","content":"    1. 项目特征 2. 依赖项目 3. 系统架构      1. 项目特征       一个嵌入式 Yocto Linux 终端项目构建管理工具\n  提供 BBFILE 自动生成功能降低开发 Yocto 项目的难度，对初学者友好\n  提供标准化的嵌入式 Linux 项目开发管理流程，提高嵌入式终端项目的可维护性\n  提供 Yocto 项目模板导入导出功能，用标准化的项目模板加速开发\n  项目运行于 Docker 容器之上，可跨平台部署（Linux、Windows），部署简便\n  2. 依赖项目     颠勺主要是基于 Django 开发， 它通过由 Celery + Redis 支持的异步队列发送 bitbake 命令进行编译等操作，另外它使用 Postgresql 作为数据库\n为了快速可靠的安装部署，颠勺和相关依赖均运行于 Docker 容器之中\n Bitbake Yocto Django Docker Postgresql Celery Redis Skeleton JQuery  3. 系统架构     颠勺主要由 dianshao-web 和 dianshao-yocto 两部分组成。前者负责提供 UI 交互界面，项目管理，包管理，元数据层管理等工作，后者负责项目创建，BBFILE 创建，Bitbake 命令运行等底层工作。正常工作时，dianshao-web 下发任务至 dianshao-yocto，并实时读取任务状态。另外，Bitbake 任务进程相关状态值由 dianshao-yocto 通过 UDP 报文主动上报给 dianshao-web\n"},{"id":3,"href":"/dianshao-docs/quickstart/quickstart/","title":"快速开始","parent":"入门","content":"    1. 说明 2. 安装  2.1 资源要求 2.2 安装准备 2.3 安装   3. 创建项目 4. 增加元数据层 5. 测试 Bitbake 命令 6. 增加软件包 7. 制作并编译镜像文件 8. 项目上传      1. 说明     本文将从零开始，让您快速的部署颠勺并构建第一个 Yocto 项目。\n本文主要目的是让您快速体验颠勺，希望在短时间内，可以说服您这个项目对嵌入式 Linux 项目开发是非常有用，可以提供生产力的。\n总的来说，颠勺是 Bitbake 的拓展，目的是帮助开发者更方便的开发 Yocto 项目\n如果你对 Yocto 很熟悉，那你会很快掌握颠勺。如果你是一个初学者，颠勺将帮助你快速理解和学会开发 Yocto 项目。但是建议你最好有一定的嵌入式 Linux 开发经验。\n详细的使用说明请参考颠勺用户手册，里面会更加详细的介绍颠勺所有的功能以及您最好掌握的相关知识说明。\n2. 安装     2.1 资源要求     由于需要编译 Yocto 项目，所以对资源要求较高，具体要求如下\n 内存最小 4GB，推荐使用 8GB 及以上 硬盘剩余空间大于 80GB  同时，为了提高编译效率，需要较多的 CPU 核，根据我个人的使用经验，10核以下机器编译体验较差。因此不建议长期使用个人电脑运行颠勺，编译效率过低往往会打消您的热情，影响您的工作效率。推荐将颠勺运行于服务器或者工作站之上，一台普通的16核32G的服务器即可满足要求。\n除此之外，非常重要的一点是请确保您的网络可以通畅连接到各个源码仓库。Yocto 项目采用完全从源码编译的方式构建项目，因此第一次编译时需要拉取项目包含的软件源码包。如果您的机器无法很好的访问这些源码仓库，你会遇到多次失败，或者等待一周甚至更长时间也无法完成编译。\n工欲善其事必先利其器，建议您将宿主机的资源和网络准备好后再开始使用颠勺\n2.2 安装准备     目前，颠勺已经在 Windows (Win10 \u0026amp; Win11) 和 Linux (Ubuntu, Fedora, CentOS 8) 环境下完成测试。你可以选择你习惯的操作系统环境作为 Docker 主机， 请根据如下官方文档安装 Docker \u0026amp; Docker-Compose\ndocker 安装说明docker-compose 安装说明2.3 安装       下载项目\n在 Linux 环境中使用\n$ git clone https://github.com/croakexciting/dianshao.git \u0026amp;\u0026amp; cd ./dianshao 注意：由于 Bitbake 无法被 root 用户使用，因此请确保项目文件夹权限为 1000：1000\n在 Windows 环境中使用\n$ git clone https://github.com/croakexciting/dianshao.git -c core.autocrlf=false $ cd ./dianshao   设置你的 Yocto Project 项目存放路径\n$ export DIANSHAO_YOCTO_PROJECT_PATH=\u0026#34;your yocto project path\u0026#34; 注意：如果在 Linux 中使用，请确保项目文件夹权限为 1000：1000\n$ sudo chown -R 1000:1000 $DIANSHAO_YOCTO_PROJECT_PATH 注意：如果在 Windows 中使用，请打开该文件夹大小写敏感选项\n$ fsutil.exe file setCaseSensitiveInfo $DIANSHAO_YOCTO_PROJECT_PATH enable   Docker 镜像编译\n$ sudo docker-compose build 注意：如果使用国内网络编译速度过慢，可使用如下命令使用国内镜像源\n$ sudo docker-compose -f docker-compose-with-mirror.yml build   Docker 容器启动\n$ sudo docker-compose up 注意：如果使上一步使用国内镜像源，请使用下面命令\n$ sudo docker-compose -f docker-compose-with-mirror.yml up   3. 创建项目     注意：创建项目时需要拉取 Bitbake 等项目苍鹭，请确保您的网络畅通\n输入项目名称并选择 Yocto 版本号，然后点击创建\n等待项目初始化完成，初始化时间根据你的网络情况，可能会很长，请耐心等待\n如果初始化成功，页面如下所示\n4. 增加元数据层     初始化完成的 Yocto 项目中只包含核心层，如果你需要增加其他元数据层，请点击 Add Therd-Party MetaLayer 按钮\n输入元数据层名称并且选择导入方式，remote 方式意味这你想导入的层目前不在该 Yocto 项目主目录中，local 意思则相反。如果你选择 remote, 你需要输入 Url.\nsub 意义为：如果你想导入的层是某个 Git 仓库的子目录， 例如 meta-openembedded/meta-oe/，那你需要在 sub 中填写 meta-oe\n等待进程结束，你会发现新添加的元数据层已经在列表中了\n5. 测试 Bitbake 命令     你可以在 bitbake command 界面中操作 bitbake，可以在该界面中感受颠勺如何操作 bitbake.\n注意：Bitbake 需要从零构建，对网络环境和计算资源要求很高，如果你使用普通个人电脑和国内网络，第一次编译的时间可能很长，请耐心\n6. 增加软件包     注意：颠勺自动创建的 Yocto 项目中，默认使用 qemux86-64 作为待开发机器，并默认使用 Systemd 作为启动引导。您可按照 Yocto 开发说明对 machine 和 distro 进行修改，颠勺暂时不提供该部分支持。\n进入刚刚创建的项目后，点击 DEVELOP MY META 或者点击顶栏中的 MyPackages 进入 MyPackage 界面\n点击 NEW PACKAGES 创建新的 Yocto Package. 目前颠勺提供对 C/C++ 项目以及 Golang 项目的支持。当然这并不是说您无法增加其他语言的软件包，只是您需要非常了解如何制作这些语言软件包的 BBFILE 文件。\n在本例程中，我们随机选择了一个 C 语言项目，makefile-example. 由于为 C 语言项目，因此创建时参数应按如下填写。\n完成创建后，点击该软件包右边的 DETAIL 按钮进入详情，在详情中填写该软件包仓库地址、源码路径等参数，这些均为创建 Yocto 包的必要宏定义，您可以去 Yocto 使用说明中查看其具体含义。上述项目填写如下\n填写完成后，点击 Update Package 按钮，更新包详情。然后点击 ADD ORIGINAL TASK 添加编译任务，该项目编译任务为 oe_runmake，任务类型选择为 COMPILE，子类型选 NONE，这些参数意义请见用户手册中的 MyPackage 部分，如下图所示。\n然后再点击 ADD INSTALL TASK，我们将编译出来的可执行文件放置到终端固件文件系统中的 /usr/bin 文件夹下，如下图所示。\n完成上述操作后，点击 GENERATE BB/BBAPPEND FILE 即可自动生成 Yocto 包。您可以点击 Bitbake It 按钮测试编译该包。\n7. 制作并编译镜像文件     终端项目的最终目的是完成 u-boot，内核，文件系统的编译和制作，并将其打包为镜像文件。为了方便项目的裁剪，同一个项目里可以有多个镜像，每个镜像中可以有不同的文件系统，但是 u-boot 和内核只允许存在一个。\nyocto 已经提供了两个基础文件系统，我们只需在其基础上增加自己的软件包即可，创建镜像完成后，我们加入刚才增加的makefile-example 包，并点击 Make Image 按钮制作镜像文件。如下图所示\n完成镜像制作后，我们在该镜像界面点击 Bitbake Image 按钮编译该镜像。第一次编译的时间会很长，请保持耐心。\n8. 项目上传     颠勺已经为您自动初始化了 git 仓库，并增加了 git submodule，后续项目上传仓库按照 git 使用说明使用即可。\n"},{"id":4,"href":"/dianshao-docs/tags/","title":"Tags","parent":"欢迎使用颠勺","content":""},{"id":5,"href":"/dianshao-docs/quickstart/","title":"入门","parent":"欢迎使用颠勺","content":"本章节中将会用几分钟的时间带您感受颠勺\n"},{"id":6,"href":"/dianshao-docs/tutorial/","title":"教程","parent":"欢迎使用颠勺","content":""},{"id":7,"href":"/dianshao-docs/","title":"欢迎使用颠勺","parent":"","content":"颠勺是一个嵌入式 Linux 项目构建管理工具，它主要基于 Bitbake和 Yocto项目使用。目的是降低 Bitbake 的使用门槛，提高 Yocto 项目的开发体验。\n使用手册   项目特点   项目管理优雅可靠   一个嵌入式 Linux 终端项目过于零散，由许多小的软件项目组成，如何使用优雅的方式管理项目是一个挑战。颠勺所有上有软件项目仓库集成管理，从源码编译各项目并打包制作镜像文件，避免出现终端项目管理混乱的情况。  标准化的项目开发流程   颠勺致力于提供基础且标准化的嵌入式 Linux 项目开发流程，包括底层软件移植开发流程、应用软件开发规范、项目集成规范等。目标是提高开发效率、提升产品质量、方便后续产品升级维护。  快速上手，简单易用   Bitbake 和 Yocto 是非常棒的项目，但是其学习曲线十分陡峭，对新手不友好。颠勺可以自动创建 BBFILE，具备优秀的 Bitbake UI 界面，可以帮助初学者更快的学会开发 Yocto 项目。   "},{"id":8,"href":"/dianshao-docs/usermanual/","title":"用户手册","parent":"欢迎使用颠勺","content":""}]